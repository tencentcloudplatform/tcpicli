// 2018-01-03 16:15:50.681673 -0800 PST m=+292.590014502
// Code generated by go generate; DO NOT EDIT.
// This file was generated by robots

package ccs

import (
	"encoding/json"
	"github.com/tencentcloudplatform/tcpicli/core"
)

type DescribeClusterResp struct {
	Code     int64  `json:"code"`
	CodeDesc string `json:"codeDesc"`
	Data     struct {
		Clusters []struct {
			ClusterCIDR             string      `json:"clusterCIDR"`
			ClusterExternalEndpoint interface{} `json:"clusterExternalEndpoint"`
			ClusterID               string      `json:"clusterId"`
			ClusterName             string      `json:"clusterName"`
			CreatedAt               string      `json:"createdAt"`
			Description             string      `json:"description"`
			K8sVersion              string      `json:"k8sVersion"`
			MasterLbSubnetID        string      `json:"masterLbSubnetId"`
			NodeNum                 int64       `json:"nodeNum"`
			NodeStatus              string      `json:"nodeStatus"`
			OpenHTTPS               int64       `json:"openHttps"`
			Os                      string      `json:"os"`
			ProjectID               int64       `json:"projectId"`
			Region                  string      `json:"region"`
			RegionID                int64       `json:"regionId"`
			Status                  string      `json:"status"`
			TotalCPU                int64       `json:"totalCpu"`
			TotalMem                int64       `json:"totalMem"`
			UnVpcID                 string      `json:"unVpcId"`
			UpdatedAt               string      `json:"updatedAt"`
			VpcID                   int64       `json:"vpcId"`
		} `json:"clusters"`
		TotalCount int64 `json:"totalCount"`
	} `json:"data"`
	Message string `json:"message"`
}

// Implement https://cloud.tencent.com/document/api/457/9448
func (c *CcsClient) DescribeCluster(options ...string) (*DescribeClusterResp, error) {
	resp, err := c.DoAction("DescribeCluster", options...)
	if err != nil {
		return nil, err
	}
	var s DescribeClusterResp
	err = json.Unmarshal(resp, &s)
	return &s, err
}

func DescribeCluster(options ...string) (*DescribeClusterResp, error) {
	return DefaultClient.DescribeCluster(options...)
}

func (r *DescribeClusterResp) String(args ...interface{}) (string, error) {
	var b []byte
	var err error
	if len(args) == 0 {
		b, err = json.MarshalIndent(r, "", "  ")
	} else if len(args) == 1 {
		if val, ok := args[0].(string); ok {
			if len(val) == 0 {
				b, err = json.MarshalIndent(r, "", "  ")
			} else {
				b, err = core.FmtOutput(val, r)
			}
		}
	}
	return string(b), err
}
