// 2018-01-03 16:15:52.153404 -0800 PST m=+294.061742999
// Code generated by go generate; DO NOT EDIT.
// This file was generated by robots

package ccs

import (
	"encoding/json"
	"github.com/tencentcloudplatform/tcpicli/core"
)

type DescribeClusterInstancesResp struct {
	Code     int64  `json:"code"`
	CodeDesc string `json:"codeDesc"`
	Data     struct {
		Nodes []struct {
			AbnormalReason       string        `json:"abnormalReason"`
			CPU                  int64         `json:"cpu"`
			CreatedAt            string        `json:"createdAt"`
			CvmPayMode           int64         `json:"cvmPayMode"`
			CvmState             int64         `json:"cvmState"`
			InstanceCreateTime   string        `json:"instanceCreateTime"`
			InstanceDeadlineTime string        `json:"instanceDeadlineTime"`
			InstanceID           string        `json:"instanceId"`
			InstanceName         string        `json:"instanceName"`
			InstanceType         string        `json:"instanceType"`
			IsNormal             int64         `json:"isNormal"`
			KernelVersion        string        `json:"kernelVersion"`
			Labels               []interface{} `json:"labels"`
			LanIP                string        `json:"lanIp"`
			Mem                  int64         `json:"mem"`
			NetworkPayMode       int64         `json:"networkPayMode"`
			OsImage              string        `json:"osImage"`
			PodCidr              string        `json:"podCidr"`
			Unschedulable        bool          `json:"unschedulable"`
			WanIP                string        `json:"wanIp"`
			Zone                 string        `json:"zone"`
			ZoneID               int64         `json:"zoneId"`
		} `json:"nodes"`
		TotalCount int64 `json:"totalCount"`
	} `json:"data"`
	Message string `json:"message"`
}

// Implement https://cloud.tencent.com/document/api/457/9449
func (c *CcsClient) DescribeClusterInstances(options ...string) (*DescribeClusterInstancesResp, error) {
	resp, err := c.DoAction("DescribeClusterInstances", options...)
	if err != nil {
		return nil, err
	}
	var s DescribeClusterInstancesResp
	err = json.Unmarshal(resp, &s)
	return &s, err
}

func DescribeClusterInstances(options ...string) (*DescribeClusterInstancesResp, error) {
	return DefaultClient.DescribeClusterInstances(options...)
}

func (r *DescribeClusterInstancesResp) String(args ...interface{}) (string, error) {
	var b []byte
	var err error
	if len(args) == 0 {
		b, err = json.MarshalIndent(r, "", "  ")
	} else if len(args) == 1 {
		if val, ok := args[0].(string); ok {
			if len(val) == 0 {
				b, err = json.MarshalIndent(r, "", "  ")
			} else {
				b, err = core.FmtOutput(val, r)
			}
		}
	}
	return string(b), err
}
