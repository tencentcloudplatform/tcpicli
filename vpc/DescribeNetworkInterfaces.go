// 2018-01-09 09:23:31.396559 -0800 PST m=+92.722396189
// Code generated by go generate; DO NOT EDIT.
// This file was generated by robots

package vpc

import (
	"encoding/json"
	"github.com/tencentcloudplatform/tcpicli/core"
)

type DescribeNetworkInterfacesResp struct {
	Code     int64  `json:"code"`
	CodeDesc string `json:"codeDesc"`
	Data     struct {
		Data []struct {
			CreateTime     string        `json:"createTime"`
			EniDescription string        `json:"eniDescription"`
			EniName        string        `json:"eniName"`
			GroupSet       []interface{} `json:"groupSet"`
			InstanceSet    struct {
				AttachTime string `json:"attachTime"`
				InstanceID string `json:"instanceId"`
			} `json:"instanceSet"`
			MacAddress            string `json:"macAddress"`
			NetworkInterfaceID    string `json:"networkInterfaceId"`
			Primary               bool   `json:"primary"`
			PrivateIPAddressesSet []struct {
				Description      string `json:"description"`
				EipID            string `json:"eipId"`
				IsWanIPBlocked   bool   `json:"isWanIpBlocked"`
				Primary          bool   `json:"primary"`
				PrivateIPAddress string `json:"privateIpAddress"`
				WanIP            string `json:"wanIp"`
			} `json:"privateIpAddressesSet"`
			SubnetID string `json:"subnetId"`
			VpcID    string `json:"vpcId"`
			VpcName  string `json:"vpcName"`
			ZoneID   int64  `json:"zoneId"`
		} `json:"data"`
		TotalNum int64 `json:"totalNum"`
	} `json:"data"`
	Message string `json:"message"`
}

// Implement https://cloud.tencent.com/document/api/215/4814
func (c *VpcClient) DescribeNetworkInterfaces(options ...string) (*DescribeNetworkInterfacesResp, error) {
	resp, err := c.DoAction("DescribeNetworkInterfaces", options...)
	if err != nil {
		return nil, err
	}
	var s DescribeNetworkInterfacesResp
	err = json.Unmarshal(resp, &s)
	return &s, err
}

func DescribeNetworkInterfaces(options ...string) (*DescribeNetworkInterfacesResp, error) {
	return DefaultClient.DescribeNetworkInterfaces(options...)
}

func (r *DescribeNetworkInterfacesResp) String(args ...interface{}) (string, error) {
	var b []byte
	var err error
	if len(args) == 0 {
		b, err = json.MarshalIndent(r, "", "  ")
	} else if len(args) == 1 {
		if val, ok := args[0].(string); ok {
			if len(val) == 0 {
				b, err = json.MarshalIndent(r, "", "  ")
			} else {
				b, err = core.FmtOutput(val, r)
			}
		}
	}
	return string(b), err
}
